// This file is auto-generated by @hey-api/openapi-ts

export type BodyChainServiceGetChainMoves = {
    chain_id: string;
};

export type BodyChainServiceGetDanceChain = {
    chain_id: string;
};

export type BodyChainServiceGetDanceChains = {
    category?: string | null;
    limit: number;
    offset: number;
};

export type BodyChainServiceSearchChains = {
    query: string;
    limit: number;
};

export type BodyUserServiceGetPublicUserProfile = {
    username: string;
};

export type BodyUserServiceGetUserChains = {
    username: string;
};

export type BodyUserServiceGetUserMoves = {
    username: string;
};

export type BodyVotingServiceGetMoveLeaderboardForChain = {
    chain_id: string;
};

export type BodyVotingServiceGetTopMoves = {
    limit: number;
};

export type BodyVotingServiceGetUserVoteOnMove = {
    move_id: string;
};

export type BodyVotingServiceRemoveVote = {
    move_id: string;
};

export type BodyVotingServiceVoteOnMove = {
    move_id: string;
    vote_type: string;
};

export type BodyChainServiceAddMoveToChain = {
    chain_id: string;
    video: Blob | File;
};

export type BodyChainServiceCreateDanceChain = {
    category: string;
    description: string;
    max_moves?: number;
    title: string;
    video: Blob | File;
};

export type BodyUserServiceCreateUserProfile = {
    avatar?: (Blob | File) | null;
    bio?: string | null;
    dance_styles?: string | null;
    display_name?: string | null;
    location?: string | null;
    username: string;
};

export type BodyUserServiceUpdateUserProfile = {
    avatar?: (Blob | File) | null;
    bio?: string | null;
    dance_styles?: string | null;
    display_name?: string | null;
    location?: string | null;
};

export type ChainMove = {
    id?: string;
    chain_id: string;
    user_id: string;
    move_number: number;
    video_path: string;
    pose_data: {
        [key: string]: unknown;
    };
    verification_score?: number | null;
    duration_seconds: number;
    votes_up?: number;
    votes_down?: number;
    views?: number;
    flagged?: boolean;
    created_at?: string;
};

export type DanceChain = {
    id?: string;
    title: string;
    description: string;
    category: string;
    max_moves?: number;
    creator_id: string;
    status?: string;
    current_move_count?: number;
    total_views?: number;
    total_votes?: number;
    featured?: boolean;
    created_at?: string;
    updated_at?: string;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type UserProfile = {
    id?: string;
    user_id: string;
    username: string;
    display_name?: string | null;
    bio?: string | null;
    avatar_path?: string | null;
    location?: string | null;
    dance_styles?: string | null;
    total_chains_created?: number;
    total_moves_submitted?: number;
    total_votes_received?: number;
    follower_count?: number;
    following_count?: number;
    verified?: boolean;
    created_at?: string;
    updated_at?: string;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type Vote = {
    id?: string;
    move_id: string;
    user_id: string;
    vote_type: string;
    created_at?: string;
};

export type UserServiceGetUserProfileData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/user_service/get_user_profile';
};

export type UserServiceGetUserProfileResponses = {
    /**
     * Successful Response
     */
    200: UserProfile | null;
};

export type UserServiceGetUserProfileResponse = UserServiceGetUserProfileResponses[keyof UserServiceGetUserProfileResponses];

export type UserServiceCreateUserProfileData = {
    body: BodyUserServiceCreateUserProfile;
    path?: never;
    query?: never;
    url: '/api/user_service/create_user_profile';
};

export type UserServiceCreateUserProfileErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UserServiceCreateUserProfileError = UserServiceCreateUserProfileErrors[keyof UserServiceCreateUserProfileErrors];

export type UserServiceCreateUserProfileResponses = {
    /**
     * Successful Response
     */
    200: UserProfile;
};

export type UserServiceCreateUserProfileResponse = UserServiceCreateUserProfileResponses[keyof UserServiceCreateUserProfileResponses];

export type UserServiceUpdateUserProfileData = {
    body?: BodyUserServiceUpdateUserProfile;
    path?: never;
    query?: never;
    url: '/api/user_service/update_user_profile';
};

export type UserServiceUpdateUserProfileErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UserServiceUpdateUserProfileError = UserServiceUpdateUserProfileErrors[keyof UserServiceUpdateUserProfileErrors];

export type UserServiceUpdateUserProfileResponses = {
    /**
     * Successful Response
     */
    200: UserProfile;
};

export type UserServiceUpdateUserProfileResponse = UserServiceUpdateUserProfileResponses[keyof UserServiceUpdateUserProfileResponses];

export type UserServiceGetPublicUserProfileData = {
    body: BodyUserServiceGetPublicUserProfile;
    path?: never;
    query?: never;
    url: '/api/user_service/get_public_user_profile';
};

export type UserServiceGetPublicUserProfileErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UserServiceGetPublicUserProfileError = UserServiceGetPublicUserProfileErrors[keyof UserServiceGetPublicUserProfileErrors];

export type UserServiceGetPublicUserProfileResponses = {
    /**
     * Successful Response
     */
    200: UserProfile | null;
};

export type UserServiceGetPublicUserProfileResponse = UserServiceGetPublicUserProfileResponses[keyof UserServiceGetPublicUserProfileResponses];

export type UserServiceGetUserChainsData = {
    body: BodyUserServiceGetUserChains;
    path?: never;
    query?: never;
    url: '/api/user_service/get_user_chains';
};

export type UserServiceGetUserChainsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UserServiceGetUserChainsError = UserServiceGetUserChainsErrors[keyof UserServiceGetUserChainsErrors];

export type UserServiceGetUserChainsResponses = {
    /**
     * Successful Response
     */
    200: Array<DanceChain>;
};

export type UserServiceGetUserChainsResponse = UserServiceGetUserChainsResponses[keyof UserServiceGetUserChainsResponses];

export type UserServiceGetUserMovesData = {
    body: BodyUserServiceGetUserMoves;
    path?: never;
    query?: never;
    url: '/api/user_service/get_user_moves';
};

export type UserServiceGetUserMovesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UserServiceGetUserMovesError = UserServiceGetUserMovesErrors[keyof UserServiceGetUserMovesErrors];

export type UserServiceGetUserMovesResponses = {
    /**
     * Successful Response
     */
    200: Array<ChainMove>;
};

export type UserServiceGetUserMovesResponse = UserServiceGetUserMovesResponses[keyof UserServiceGetUserMovesResponses];

export type ChainServiceCreateDanceChainData = {
    body: BodyChainServiceCreateDanceChain;
    path?: never;
    query?: never;
    url: '/api/chain_service/create_dance_chain';
};

export type ChainServiceCreateDanceChainErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChainServiceCreateDanceChainError = ChainServiceCreateDanceChainErrors[keyof ChainServiceCreateDanceChainErrors];

export type ChainServiceCreateDanceChainResponses = {
    /**
     * Successful Response
     */
    200: DanceChain;
};

export type ChainServiceCreateDanceChainResponse = ChainServiceCreateDanceChainResponses[keyof ChainServiceCreateDanceChainResponses];

export type ChainServiceGetDanceChainsData = {
    body: BodyChainServiceGetDanceChains;
    path?: never;
    query?: never;
    url: '/api/chain_service/get_dance_chains';
};

export type ChainServiceGetDanceChainsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChainServiceGetDanceChainsError = ChainServiceGetDanceChainsErrors[keyof ChainServiceGetDanceChainsErrors];

export type ChainServiceGetDanceChainsResponses = {
    /**
     * Successful Response
     */
    200: Array<DanceChain>;
};

export type ChainServiceGetDanceChainsResponse = ChainServiceGetDanceChainsResponses[keyof ChainServiceGetDanceChainsResponses];

export type ChainServiceGetDanceChainData = {
    body: BodyChainServiceGetDanceChain;
    path?: never;
    query?: never;
    url: '/api/chain_service/get_dance_chain';
};

export type ChainServiceGetDanceChainErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChainServiceGetDanceChainError = ChainServiceGetDanceChainErrors[keyof ChainServiceGetDanceChainErrors];

export type ChainServiceGetDanceChainResponses = {
    /**
     * Successful Response
     */
    200: DanceChain | null;
};

export type ChainServiceGetDanceChainResponse = ChainServiceGetDanceChainResponses[keyof ChainServiceGetDanceChainResponses];

export type ChainServiceGetChainMovesData = {
    body: BodyChainServiceGetChainMoves;
    path?: never;
    query?: never;
    url: '/api/chain_service/get_chain_moves';
};

export type ChainServiceGetChainMovesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChainServiceGetChainMovesError = ChainServiceGetChainMovesErrors[keyof ChainServiceGetChainMovesErrors];

export type ChainServiceGetChainMovesResponses = {
    /**
     * Successful Response
     */
    200: Array<ChainMove>;
};

export type ChainServiceGetChainMovesResponse = ChainServiceGetChainMovesResponses[keyof ChainServiceGetChainMovesResponses];

export type ChainServiceAddMoveToChainData = {
    body: BodyChainServiceAddMoveToChain;
    path?: never;
    query?: never;
    url: '/api/chain_service/add_move_to_chain';
};

export type ChainServiceAddMoveToChainErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChainServiceAddMoveToChainError = ChainServiceAddMoveToChainErrors[keyof ChainServiceAddMoveToChainErrors];

export type ChainServiceAddMoveToChainResponses = {
    /**
     * Successful Response
     */
    200: ChainMove;
};

export type ChainServiceAddMoveToChainResponse = ChainServiceAddMoveToChainResponses[keyof ChainServiceAddMoveToChainResponses];

export type ChainServiceSearchChainsData = {
    body: BodyChainServiceSearchChains;
    path?: never;
    query?: never;
    url: '/api/chain_service/search_chains';
};

export type ChainServiceSearchChainsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChainServiceSearchChainsError = ChainServiceSearchChainsErrors[keyof ChainServiceSearchChainsErrors];

export type ChainServiceSearchChainsResponses = {
    /**
     * Successful Response
     */
    200: Array<DanceChain>;
};

export type ChainServiceSearchChainsResponse = ChainServiceSearchChainsResponses[keyof ChainServiceSearchChainsResponses];

export type VotingServiceVoteOnMoveData = {
    body: BodyVotingServiceVoteOnMove;
    path?: never;
    query?: never;
    url: '/api/voting_service/vote_on_move';
};

export type VotingServiceVoteOnMoveErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VotingServiceVoteOnMoveError = VotingServiceVoteOnMoveErrors[keyof VotingServiceVoteOnMoveErrors];

export type VotingServiceVoteOnMoveResponses = {
    /**
     * Successful Response
     */
    200: Vote;
};

export type VotingServiceVoteOnMoveResponse = VotingServiceVoteOnMoveResponses[keyof VotingServiceVoteOnMoveResponses];

export type VotingServiceRemoveVoteData = {
    body: BodyVotingServiceRemoveVote;
    path?: never;
    query?: never;
    url: '/api/voting_service/remove_vote';
};

export type VotingServiceRemoveVoteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VotingServiceRemoveVoteError = VotingServiceRemoveVoteErrors[keyof VotingServiceRemoveVoteErrors];

export type VotingServiceRemoveVoteResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type VotingServiceRemoveVoteResponse = VotingServiceRemoveVoteResponses[keyof VotingServiceRemoveVoteResponses];

export type VotingServiceGetUserVoteOnMoveData = {
    body: BodyVotingServiceGetUserVoteOnMove;
    path?: never;
    query?: never;
    url: '/api/voting_service/get_user_vote_on_move';
};

export type VotingServiceGetUserVoteOnMoveErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VotingServiceGetUserVoteOnMoveError = VotingServiceGetUserVoteOnMoveErrors[keyof VotingServiceGetUserVoteOnMoveErrors];

export type VotingServiceGetUserVoteOnMoveResponses = {
    /**
     * Successful Response
     */
    200: Vote | null;
};

export type VotingServiceGetUserVoteOnMoveResponse = VotingServiceGetUserVoteOnMoveResponses[keyof VotingServiceGetUserVoteOnMoveResponses];

export type VotingServiceGetTopMovesData = {
    body: BodyVotingServiceGetTopMoves;
    path?: never;
    query?: never;
    url: '/api/voting_service/get_top_moves';
};

export type VotingServiceGetTopMovesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VotingServiceGetTopMovesError = VotingServiceGetTopMovesErrors[keyof VotingServiceGetTopMovesErrors];

export type VotingServiceGetTopMovesResponses = {
    /**
     * Successful Response
     */
    200: Array<ChainMove>;
};

export type VotingServiceGetTopMovesResponse = VotingServiceGetTopMovesResponses[keyof VotingServiceGetTopMovesResponses];

export type VotingServiceGetMoveLeaderboardForChainData = {
    body: BodyVotingServiceGetMoveLeaderboardForChain;
    path?: never;
    query?: never;
    url: '/api/voting_service/get_move_leaderboard_for_chain';
};

export type VotingServiceGetMoveLeaderboardForChainErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VotingServiceGetMoveLeaderboardForChainError = VotingServiceGetMoveLeaderboardForChainErrors[keyof VotingServiceGetMoveLeaderboardForChainErrors];

export type VotingServiceGetMoveLeaderboardForChainResponses = {
    /**
     * Successful Response
     */
    200: Array<ChainMove>;
};

export type VotingServiceGetMoveLeaderboardForChainResponse = VotingServiceGetMoveLeaderboardForChainResponses[keyof VotingServiceGetMoveLeaderboardForChainResponses];